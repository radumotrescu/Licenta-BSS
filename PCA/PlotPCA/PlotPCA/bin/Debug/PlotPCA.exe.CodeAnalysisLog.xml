<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio\2017\community\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="15.0">
 <Namespaces>
  <Namespace Name="PlotPCA">
   <Messages>
    <Message Id="PCA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'PCA' in namespace name 'PlotPCA' by changing it to 'Pca'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA\bin\Debug\PlotPCA.exe">
   <Modules>
    <Module Name="plotpca.exe">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'PlotPCA.exe' with a strong name key.</Issue>
      </Message>
      <Message Id="PCA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'PCA' in assembly name 'PlotPCA.exe' by changing it to 'Pca'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'PlotPCA.exe' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'PlotPCA.exe' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="AccordPCA">
       <Types>
        <Type Name="ObjectPCA" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#allKernelData" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="421">'ObjectPCA.allKernelData' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_allKernelData()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="421">'ObjectPCA.allKernelData.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#allKernelValues" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_allKernelValues()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="417">'ObjectPCA.allKernelValues.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#allKernelVectors" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="419">'ObjectPCA.allKernelVectors' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_allKernelVectors()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="419">'ObjectPCA.allKernelVectors.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Compute()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="126">Method 'ObjectPCA.Compute()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "eigenvalues pca\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="125">Method 'ObjectPCA.Compute()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "eigenvectors pca\n".</Issue>
            </Message>
            <Message Id="pca" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="126">Correct the spelling of the unrecognized token 'pca' in the literal '"eigenvalues pca\n"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="125">Correct the spelling of the unrecognized token 'pca' in the literal '"eigenvectors pca\n"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ComputeKernel()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="352">In method 'ObjectPCA.ComputeKernel()', object 'sw' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'sw' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="383">In method 'ObjectPCA.ComputeKernel()', object 'sw' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'sw' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="353">In method 'ObjectPCA.ComputeKernel()', object 'sw1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'sw1' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="384">In method 'ObjectPCA.ComputeKernel()', object 'sw1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'sw1' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="319">'ObjectPCA.ComputeKernel()' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="326">'ObjectPCA.ComputeKernel()' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="328">'ObjectPCA.ComputeKernel()' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
            <Message Id="p1" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="340">'ObjectPCA.ComputeKernel()' declares a variable, 'p1', of type 'double[,]', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="p2" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="341">'ObjectPCA.ComputeKernel()' declares a variable, 'p2', of type 'double[,]', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#covarianceMatrix" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning">'ObjectPCA.covarianceMatrix' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CovarianceMatrix" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="71">'ObjectPCA.CovarianceMatrix' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_CovarianceMatrix()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="71">'ObjectPCA.CovarianceMatrix.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#data2D" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning">'ObjectPCA.data2D' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Data2D" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="103">'ObjectPCA.Data2D' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dataAdjusted" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning">'ObjectPCA.dataAdjusted' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DataAdjusted" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="59">'ObjectPCA.DataAdjusted' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#get_DataAdjusted()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="59">'ObjectPCA.DataAdjusted.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Eigenvalues" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Eigenvalues()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="79">'ObjectPCA.Eigenvalues.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#eigenvectors" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning">'ObjectPCA.eigenvectors' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Eigenvectors" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="87">'ObjectPCA.Eigenvectors' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#finalData" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning">'ObjectPCA.finalData' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FinalData" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="95">'ObjectPCA.FinalData' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getDistances(System.Double,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="221">'ObjectPCA.getDistances(double, double)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#initialData" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning">'ObjectPCA.initialData' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitialData" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="42">'ObjectPCA.InitialData' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_InitialData(System.Double[,])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="43">'ObjectPCA.InitialData.set(double[,])' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#kernelAccord()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="406">'ObjectPCA.kernelAccord()' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#KernelData" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="Member" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="239">'ObjectPCA.KernelData' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#KernelValues" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_KernelValues()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="251">'ObjectPCA.KernelValues.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#KernelVectors" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_KernelVectors()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="256">'ObjectPCA.KernelVectors.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Mean" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Mean()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="51">'ObjectPCA.Mean.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#plotPointKernelPCA(System.Double[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="286">'ObjectPCA.plotPointKernelPCA(double[])' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#plotPointKernelPCA2(System.Double,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="259">'ObjectPCA.plotPointKernelPCA2(double, double)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="260">'ObjectPCA.plotPointKernelPCA2(double, double)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrintToConsole()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="138">'ObjectPCA.PrintToConsole()' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="143">Method 'ObjectPCA.PrintToConsole()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Adjusted data".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="145">Method 'ObjectPCA.PrintToConsole()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Eigenvalues".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="147">Method 'ObjectPCA.PrintToConsole()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Eigenvectors".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="149">Method 'ObjectPCA.PrintToConsole()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Final PCA data".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="141">Method 'ObjectPCA.PrintToConsole()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Mean".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="ObjectPCA.cs" Line="139">Method 'ObjectPCA.PrintToConsole()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Original data".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PointCloud" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor(System.Double[,],System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="PointCloud.cs" Line="30">'PointCloud.PointCloud(double[,], int)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#generateMoonCloud(System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="PointCloud.cs" Line="98">'PointCloud.generateMoonCloud(bool)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MaxRadius" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_MaxRadius()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="PointCloud.cs" Line="65">'PointCloud.MaxRadius.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ReturnCircleDoubleMatrix()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="PointCloud.cs" Line="252">'PointCloud.ReturnCircleDoubleMatrix()' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
            <Message Id="Return" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="PointCloud.cs" Line="250">'PointCloud.ReturnCircleDoubleMatrix()' returns a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReturnCloudDoubleMatrix()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="PointCloud.cs" Line="239">'PointCloud.ReturnCloudDoubleMatrix()' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
            <Message Id="Return" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="PointCloud.cs" Line="237">'PointCloud.ReturnCloudDoubleMatrix()' returns a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReturnEllipseMoonDoubleMatrix(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="PointCloud.cs" Line="276">'PointCloud.ReturnEllipseMoonDoubleMatrix(bool)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
            <Message Id="Return" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="PointCloud.cs" Line="274">'PointCloud.ReturnEllipseMoonDoubleMatrix(bool)' returns a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReturnMoonDoubleMatrix(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="PointCloud.cs" Line="262">'PointCloud.ReturnMoonDoubleMatrix(bool)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="PointCloud.cs" Line="264">'PointCloud.ReturnMoonDoubleMatrix(bool)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
            <Message Id="Return" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="PointCloud.cs" Line="262">'PointCloud.ReturnMoonDoubleMatrix(bool)' returns a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReturnRawDoubleMatrix()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="PointCloud.cs" Line="287">'PointCloud.ReturnRawDoubleMatrix()' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="PointCloud.cs" Line="288">'PointCloud.ReturnRawDoubleMatrix()' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
            <Message Id="Return" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="PointCloud.cs" Line="287">'PointCloud.ReturnRawDoubleMatrix()' returns a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="PlotPCA">
       <Types>
        <Type Name="Form1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ZedGraph.Label.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="48">Method 'Form1.Form1()' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "PCA Final Data".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="60">Method 'Form1.Form1()' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "PCA Final First Component Span".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="42">Method 'Form1.Form1()' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "PCA Initial Data".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="54">Method 'Form1.Form1()' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "PCA Original First Component Span".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="43">Method 'Form1.Form1()' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "X Coordinates".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="49">Method 'Form1.Form1()' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "X Coordinates".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="55">Method 'Form1.Form1()' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "X Coordinates".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="61">Method 'Form1.Form1()' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "X Coordinates".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="44">Method 'Form1.Form1()' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Y Coordinates".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="50">Method 'Form1.Form1()' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Y Coordinates".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="56">Method 'Form1.Form1()' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Y Coordinates".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="62">Method 'Form1.Form1()' passes a literal string as parameter 'value' of a call to 'Label.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Y Coordinates".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button1_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveLocals" Category="Microsoft.Performance" CheckId="CA1809" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Name="Compiler" Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="330">'Form1.button1_Click(object, EventArgs)' has 92 local variables, 19 of which were generated by the compiler. Refactor 'Form1.button1_Click(object, EventArgs)' so that it uses fewer than 64 local variables.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="342">In method 'Form1.button1_Click(object, EventArgs)', object 'csv' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'csv' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="371">'Form1.button1_Click(object, EventArgs)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="438">'Form1.button1_Click(object, EventArgs)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="486">'Form1.button1_Click(object, EventArgs)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="492">'Form1.button1_Click(object, EventArgs)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="498">'Form1.button1_Click(object, EventArgs)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="522">'Form1.button1_Click(object, EventArgs)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="528">'Form1.button1_Click(object, EventArgs)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="534">'Form1.button1_Click(object, EventArgs)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
            <Message Id="p" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="436">'Form1.button1_Click(object, EventArgs)' declares a variable, 'p', of type 'double[]', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button2_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="887">Method 'Form1.button2_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Final gamma: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="888">Method 'Form1.button2_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Minimum points: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="1074">Method 'Form1.button2_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "No gamma found".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="891">Method 'Form1.button2_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Separation Point: ".</Issue>
            </Message>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="683">'Form1.button2_Click(object, EventArgs)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="694">'Form1.button2_Click(object, EventArgs)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="695">'Form1.button2_Click(object, EventArgs)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="738">'Form1.button2_Click(object, EventArgs)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="739">'Form1.button2_Click(object, EventArgs)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="931">'Form1.button2_Click(object, EventArgs)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="1001">'Form1.button2_Click(object, EventArgs)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="1007">'Form1.button2_Click(object, EventArgs)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="1030">'Form1.button2_Click(object, EventArgs)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="1036">'Form1.button2_Click(object, EventArgs)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
            <Message Id="cloud1PlottedPoints" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="738">'Form1.button2_Click(object, EventArgs)' declares a variable, 'cloud1PlottedPoints', of type 'double[,]', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="cloud2PlottedPoints" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="739">'Form1.button2_Click(object, EventArgs)' declares a variable, 'cloud2PlottedPoints', of type 'double[,]', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="gamma" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="719">'Form1.button2_Click(object, EventArgs)' declares a variable, 'gamma', of type 'double', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="initialPointCloud1" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="644">'Form1.button2_Click(object, EventArgs)' declares a variable, 'initialPointCloud1', of type 'PointCloud', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="initialPointCloud2" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="645">'Form1.button2_Click(object, EventArgs)' declares a variable, 'initialPointCloud2', of type 'PointCloud', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="r1bun" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="729">'Form1.button2_Click(object, EventArgs)' declares a variable, 'r1bun', of type 'Form1.Range', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="r2bun" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="729">'Form1.button2_Click(object, EventArgs)' declares a variable, 'r2bun', of type 'Form1.Range', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="separationPoint" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="736">'Form1.button2_Click(object, EventArgs)' declares a variable, 'separationPoint', of type 'double', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="1070">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'Form1.button2_Click(object, EventArgs)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button3_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="1089">In method 'Form1.button3_Click(object, EventArgs)', object 'csv' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'csv' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#button4_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="1259">'Form1.button4_Click(object, EventArgs)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="1265">'Form1.button4_Click(object, EventArgs)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="1271">'Form1.button4_Click(object, EventArgs)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#checkPoint(PlotPCA.Form1+Range,System.Double)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="228">The 'this' parameter (or 'Me' in Visual Basic) of 'Form1.checkPoint(Form1.Range, double)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#combineData(System.Collections.Generic.List`1&lt;System.Double[,]&gt;,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="188">'Form1.combineData(List&lt;double[,]&gt;, int)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
            <Message Id="Return" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="187">'Form1.combineData(List&lt;double[,]&gt;, int)' returns a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
            <Message Id="count" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="187">Parameter 'count' of 'Form1.combineData(List&lt;double[,]&gt;, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#excludePointsByIndex(System.Double[,],System.Int32[])" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="275">The 'this' parameter (or 'Me' in Visual Basic) of 'Form1.excludePointsByIndex(double[,], int[])' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="0#" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="275">'initialPointList' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="277">'Form1.excludePointsByIndex(double[,], int[])' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
            <Message Id="Return" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="275">'Form1.excludePointsByIndex(double[,], int[])' returns a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getMinMax(System.Double[],System.Double&amp;,System.Double&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="206">The 'this' parameter (or 'Me' in Visual Basic) of 'Form1.getMinMax(double[], out double, out double)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getRandomIndexes(System.Double[,],System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="0#" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="255">'pointList' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inCloud(System.Double[,],System.Double[])" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="237">The 'this' parameter (or 'Me' in Visual Basic) of 'Form1.inCloud(double[,], double[])' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="0#" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="237">'cloud' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#indexExists(System.Int32[],System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="247">The 'this' parameter (or 'Me' in Visual Basic) of 'Form1.indexExists(int[], int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.Designer.cs" Line="349">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: " PCA Plot".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.Designer.cs" Line="148">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: ".......".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.Designer.cs" Line="218">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Generate Circle + Cloud".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.Designer.cs" Line="136">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Generate Clouds".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.Designer.cs" Line="190">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Generate Iris Data Set".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.Designer.cs" Line="229">Method 'Form1.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Generate Two Moons".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pick10(System.Collections.Generic.List`1&lt;System.Int32&gt;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="611">'Form1.pick10(List&lt;int&gt;)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pointPairListInitialisation(ZedGraph.PointPairList,System.Double[,])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="1#" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="181">'point' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadDataFromFile(System.Double[,]&amp;,System.Int32&amp;,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="124">'Form1.ReadDataFromFile(out double[,], out int, string)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="125">In method 'Form1.ReadDataFromFile(out double[,], out int, string)', object 'sr' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'sr' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Double.TryParse(System.String,System.Double@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="144">'Form1.ReadDataFromFile(out double[,], out int, string)' calls 'double.TryParse(string, out double)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
            <Message Id="System.Int32.TryParse(System.String,System.Int32@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="133">'Form1.ReadDataFromFile(out double[,], out int, string)' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="134">'Form1.ReadDataFromFile(out double[,], out int, string)' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="136">'Form1.ReadDataFromFile(out double[,], out int, string)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
            <Message Id="doubleBits" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="130">'Form1.ReadDataFromFile(out double[,], out int, string)' declares a variable, 'doubleBits', of type 'List&lt;double[]&gt;', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadDataFromFile(System.Double[,]&amp;,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="152">In method 'Form1.ReadDataFromFile(out double[,], string)', object 'sr' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'sr' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Double.TryParse(System.String,System.Double@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="174">'Form1.ReadDataFromFile(out double[,], string)' calls 'double.TryParse(string, out double)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
            <Message Id="System.Int32.TryParse(System.String,System.Int32@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="163">'Form1.ReadDataFromFile(out double[,], string)' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="164">'Form1.ReadDataFromFile(out double[,], string)' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
            <Message Id="Body" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Body" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="166">'Form1.ReadDataFromFile(out double[,], string)' uses a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
            <Message Id="doubleBits" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="157">'Form1.ReadDataFromFile(out double[,], string)' declares a variable, 'doubleBits', of type 'List&lt;double[]&gt;', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="159">Replace the call to 'string.Equals(string)' in 'Form1.ReadDataFromFile(out double[,], string)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#removeIndexesFromList(System.Collections.Generic.List`1&lt;System.Int32&gt;,System.Collections.Generic.List`1&lt;System.Int32&gt;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="628">'Form1.removeIndexesFromList(List&lt;int&gt;, List&lt;int&gt;)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteDataToFile(AccordPCA.PointCloud,System.String,CsvHelper.CsvWriter,System.Int32,System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="72">In method 'Form1.WriteDataToFile(PointCloud, string, CsvWriter, int, string, bool)', object 'sw' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'sw' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="Return" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="70">'Form1.WriteDataToFile(PointCloud, string, CsvWriter, int, string, bool)' returns a multidimensional array of 'double[,]'. Replace it with a jagged array if possible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteDataToFile(System.Double[,],System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="106">In method 'Form1.WriteDataToFile(double[,], string, int)', object 'sw' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'sw' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="0#" TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="Breaking">
             <Issue Certainty="25" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="104">'data' is a multidimensional array. Replace it with a jagged array if possible.</Issue>
            </Message>
            <Message Id="cloudIndex" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="104">Parameter 'cloudIndex' of 'Form1.WriteDataToFile(double[,], string, int)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#zedGraphControl1_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="201">'Form1.zedGraphControl1_Load(object, EventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Form1+Range" Kind="Struct" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#newRange(System.Double,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="x" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="221">'x', a parameter declared in 'Form1.Range.newRange(double, double)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="y" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2018-06-16 12:29:21Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="D:\git\SiemensDiscoverIT\PlotPCA\PlotPCA" File="Form1.cs" Line="221">'y', a parameter declared in 'Form1.Range.newRange(double, double)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveLocals" Category="Microsoft.Performance" CheckId="CA1809">
   <Name>Avoid excessive locals</Name>
   <Description>Method implementations should not contain more than 64 local variables. In order for the run-time to enregister local variables most efficiently, there should be 64 or fewer of them. Enregistering based on flow analysis will not occur for locals in excess of 64, which may result in slower performance.</Description>
   <Resolution Name="Compiler">{0} has {1} local variables, {2} of which were generated by the compiler. Refactor {0} so that it uses fewer than 64 local variables.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182263.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
   <Name>Do not ignore method results</Name>
   <Description>The result of methods that return new instances of strings should be assigned to a variable and subsequently used. If the result of a method that creates a new object, such as String.ToLower(), is not assigned to a variable, the call is wasted.</Description>
   <Resolution Name="TryParse">{0} calls {1} but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182273.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Assembly">Correct the casing of '{0}' in assembly name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
   <Name>Mark assemblies with NeutralResourcesLanguageAttribute</Name>
   <Description>The NeutralResourcesLanguage attribute informs the ResourceManager of the language used to render the neutral culture's resources for an assembly. When looking up resources in the same culture as the neutral resources language, the ResourceManager automatically uses the resources located in the main assembly, instead of searching for a satellite assembly with the current user interface culture for the current thread. This will improve lookup performance for the first resource you load and can reduce your working set.</Description>
   <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385967.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="PreferJaggedArraysOverMultidimensional" Category="Microsoft.Performance" CheckId="CA1814">
   <Name>Prefer jagged arrays over multidimensional</Name>
   <Description>Multidimensional arrays can have a negative impact on performance. Use a jagged array if possible.</Description>
   <Resolution Name="Body">{0} uses a multidimensional array of {1}. Replace it with a jagged array if possible.</Resolution>
   <Resolution Name="Default">{0} is a multidimensional array. Replace it with a jagged array if possible.</Resolution>
   <Resolution Name="Return">{0} returns a multidimensional array of {1}. Replace it with a jagged array if possible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182277.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="25">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>Test for empty strings using string length</Name>
   <Description>To test for empty strings, check if String.Length is equal to zero. Constructs such as "".Equals(someString) and String.Empty.Equals(someString) are less efficient than testing the string length. Replace these with checks for someString.Length == 0.</Description>
   <Resolution Name="IsNullOrEmpty">Replace the call to {0} in {1} with a call to 'String.IsNullOrEmpty'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182279.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500">
   <Name>Variable names should not match field names</Name>
   <Description>Instance field and variable names should not be identical within the same scope.</Description>
   <Resolution Name="Parameter">{0}, a parameter declared in {1}, has the same name as an instance field on the type. Change the name of one of these items.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182216.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="15.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
